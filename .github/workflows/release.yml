name: Release

on:
  push:
    tags:
      - 'v*'

env:
  GO_VERSION: '1.19'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

  build-and-upload:
    name: Build and Upload
    runs-on: ubuntu-latest
    needs: create-release
    
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            goos: linux
            goarch: amd64
          - os: linux
            arch: arm64
            goos: linux
            goarch: arm64
          - os: darwin
            arch: amd64
            goos: darwin
            goarch: amd64
          - os: darwin
            arch: arm64
            goos: darwin
            goarch: arm64
          - os: windows
            arch: amd64
            goos: windows
            goarch: amd64
            ext: .exe

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        cache: true

    - name: Download dependencies
      run: go mod download

    - name: Run tests
      run: go test -race ./...

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        go build -ldflags="-s -w" -trimpath -o miner-cli-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }} .

    - name: Create archive
      run: |
        if [ "${{ matrix.os }}" = "windows" ]; then
          zip miner-cli-${{ matrix.os }}-${{ matrix.arch }}.zip miner-cli-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}
          echo "ASSET_NAME=miner-cli-${{ matrix.os }}-${{ matrix.arch }}.zip" >> $GITHUB_ENV
          echo "ASSET_PATH=miner-cli-${{ matrix.os }}-${{ matrix.arch }}.zip" >> $GITHUB_ENV
        else
          tar -czf miner-cli-${{ matrix.os }}-${{ matrix.arch }}.tar.gz miner-cli-${{ matrix.os }}-${{ matrix.arch }}
          echo "ASSET_NAME=miner-cli-${{ matrix.os }}-${{ matrix.arch }}.tar.gz" >> $GITHUB_ENV
          echo "ASSET_PATH=miner-cli-${{ matrix.os }}-${{ matrix.arch }}.tar.gz" >> $GITHUB_ENV
        fi

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ${{ env.ASSET_PATH }}
        asset_name: ${{ env.ASSET_NAME }}
        asset_content_type: application/octet-stream